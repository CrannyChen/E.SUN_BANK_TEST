package tw.esun.employeeseatingdev.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import tw.esun.employeeseatingdev.entity.Employee;
import tw.esun.employeeseatingdev.entity.SeatingChart;
import tw.esun.employeeseatingdev.repository.EmployeeRepository;
import tw.esun.employeeseatingdev.repository.SeatingChartRepository;

import java.util.List;
import java.util.Optional;

@Service
public class EmployeeService {

    @Autowired
    private EmployeeRepository employeeRepository;

    @Autowired
    private SeatingChartRepository seatingChartRepository;

    public List<Employee> getAllEmployees() {
        return employeeRepository.findAll();
    }

    public Optional<Employee> getEmployeeById(String empId) {
        return employeeRepository.findById(empId);
    }

    @Transactional
    public void assignSeatToEmployee(String empId, Integer floorSeatSeq) {
        Employee employee = employeeRepository.findById(empId)
                .orElseThrow(() -> new RuntimeException("Employee not found"));
        SeatingChart seat = seatingChartRepository.findById(floorSeatSeq)
                .orElseThrow(() -> new RuntimeException("Seat not found"));

        employee.setSeatingChart(seat);
        employeeRepository.save(employee);
    }

    @Transactional
    public void clearSeat(Integer floorSeatSeq) {
        List<Employee> list = employeeRepository.findAll();
        for (Employee e : list) {
            if (e.getSeatingChart() != null &&
                e.getSeatingChart().getFloorSeatSeq().equals(floorSeatSeq)) {
                e.setSeatingChart(null);
                employeeRepository.save(e);
            }
        }
    }
}
